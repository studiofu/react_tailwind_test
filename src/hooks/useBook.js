import {create} from 'zustand';

export const useBookStore = create((set, get) => ({
    books: [],
    addBook: (book) => set(state => ({ books: [...state.books, book] })),
    removeBook: (book) => set(state => ({ books: state.books.filter(b => b.id !== book.id) })),
    updateBook: (book) => set(state => ({ books: state.books.map(b => b.id === book.id ? book : b) })),
    getBook: (id) => get().books.find(b => b.id === id),
    getBooks: () => get().books,
    getBooksByAuthor: (author) => get().books.filter(b => b.author === author),
    getBooksByTitle: (title) => get().books.filter(b => b.title === title),
    getBooksByGenre: (genre) => get().books.filter(b => b.genre === genre),
    getBooksByYear: (year) => get().books.filter(b => b.year === year),
    getBooksByRating: (rating) => get().books.filter(b => b.rating === rating),
    getBooksByRead: (read) => get().books.filter(b => b.read === read),
    getBooksByReading: (reading) => get().books.filter(b => b.reading === reading),
    getBooksByToRead: (toRead) => get().books.filter(b => b.toRead === toRead),
    getBooksByFavorite: (favorite) => get().books.filter(b => b.favorite === favorite),
    getBooksByRecommended: (recommended) => get().books.filter(b => b.recommended === recommended),
    getBooksByOwned: (owned) => get().books.filter(b => b.owned === owned),
    getBooksByBorrowed: (borrowed) => get().books.filter(b => b.borrowed === borrowed),
    getBooksByLent: (lent) => get().books.filter(b => b.lent === lent),
    getBooksBySeries: (series) => get().books.filter(b => b.series === series),
    getBooksBySeriesNumber: (seriesNumber) => get().books.filter(b => b.seriesNumber === seriesNumber),
    getBooksByPublisher: (publisher) => get().books.filter(b => b.publisher === publisher),
    getBooksByLanguage: (language) => get().books.filter(b => b.language === language),
    getBooksByPages: (pages) => get().books.filter(b => b.pages === pages),
    getBooksByFormat: (format) => get().books.filter(b => b.format === format),
}));